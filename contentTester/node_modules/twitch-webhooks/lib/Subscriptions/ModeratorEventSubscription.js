"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModeratorEventSubscription = void 0;
var tslib_1 = require("tslib");
var twitch_1 = require("twitch");
var twitch_common_1 = require("twitch-common");
var Subscription_1 = require("./Subscription");
/**
 * @private
 */
var ModeratorEventSubscription = /** @class */ (function (_super) {
    tslib_1.__extends(ModeratorEventSubscription, _super);
    function ModeratorEventSubscription(handler, client, validityInSeconds, _broadcasterId, _userId) {
        var _this = _super.call(this, handler, client, validityInSeconds) || this;
        _this._broadcasterId = _broadcasterId;
        _this._userId = _userId;
        return _this;
    }
    Object.defineProperty(ModeratorEventSubscription.prototype, "id", {
        get: function () {
            if (this._userId) {
                return "moderator.event." + this._broadcasterId + "." + this._userId;
            }
            return "moderator.event." + this._broadcasterId;
        },
        enumerable: false,
        configurable: true
    });
    ModeratorEventSubscription.prototype.transformData = function (response) {
        return new twitch_1.HelixModeratorEvent(response.data[0], this._client._apiClient);
    };
    ModeratorEventSubscription.prototype._subscribe = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b, _c, _d, _e, _f;
            return tslib_1.__generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        if (!this._userId) return [3 /*break*/, 2];
                        _b = (_a = this._client._apiClient.helix.webHooks).subscribeToModeratorEventsForUser;
                        _c = [this._broadcasterId,
                            this._userId];
                        return [4 /*yield*/, this._getOptions()];
                    case 1: return [2 /*return*/, _b.apply(_a, _c.concat([_g.sent()]))];
                    case 2:
                        _e = (_d = this._client._apiClient.helix.webHooks).subscribeToModeratorEvents;
                        _f = [this._broadcasterId];
                        return [4 /*yield*/, this._getOptions()];
                    case 3: return [2 /*return*/, _e.apply(_d, _f.concat([_g.sent()]))];
                }
            });
        });
    };
    ModeratorEventSubscription.prototype._unsubscribe = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b, _c, _d, _e, _f;
            return tslib_1.__generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        if (!this._userId) return [3 /*break*/, 2];
                        _b = (_a = this._client._apiClient.helix.webHooks).unsubscribeFromModeratorEventsForUser;
                        _c = [this._broadcasterId,
                            this._userId];
                        return [4 /*yield*/, this._getOptions()];
                    case 1: return [2 /*return*/, _b.apply(_a, _c.concat([_g.sent()]))];
                    case 2:
                        _e = (_d = this._client._apiClient.helix.webHooks).unsubscribeFromModeratorEvents;
                        _f = [this._broadcasterId];
                        return [4 /*yield*/, this._getOptions()];
                    case 3: return [2 /*return*/, _e.apply(_d, _f.concat([_g.sent()]))];
                }
            });
        });
    };
    ModeratorEventSubscription = tslib_1.__decorate([
        twitch_common_1.rtfm('twitch-webhooks', 'Subscription')
    ], ModeratorEventSubscription);
    return ModeratorEventSubscription;
}(Subscription_1.Subscription));
exports.ModeratorEventSubscription = ModeratorEventSubscription;
