import { __awaiter, __decorate, __extends, __generator } from "tslib";
import { HelixFollow } from 'twitch';
import { rtfm } from 'twitch-common';
import { Subscription } from "./Subscription.mjs";
/**
 * @private
 */
var FollowsToUserSubscription = /** @class */ (function (_super) {
    __extends(FollowsToUserSubscription, _super);
    function FollowsToUserSubscription(handler, client, validityInSeconds, _userId) {
        var _this = _super.call(this, handler, client, validityInSeconds) || this;
        _this._userId = _userId;
        return _this;
    }
    Object.defineProperty(FollowsToUserSubscription.prototype, "id", {
        get: function () {
            return "follows.to." + this._userId;
        },
        enumerable: false,
        configurable: true
    });
    FollowsToUserSubscription.prototype.transformData = function (response) {
        return new HelixFollow(response.data[0], this._client._apiClient);
    };
    FollowsToUserSubscription.prototype._subscribe = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _b = (_a = this._client._apiClient.helix.webHooks).subscribeToUserFollowsTo;
                        _c = [this._userId];
                        return [4 /*yield*/, this._getOptions()];
                    case 1: return [2 /*return*/, _b.apply(_a, _c.concat([_d.sent()]))];
                }
            });
        });
    };
    FollowsToUserSubscription.prototype._unsubscribe = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _b = (_a = this._client._apiClient.helix.webHooks).unsubscribeFromUserFollowsTo;
                        _c = [this._userId];
                        return [4 /*yield*/, this._getOptions()];
                    case 1: return [2 /*return*/, _b.apply(_a, _c.concat([_d.sent()]))];
                }
            });
        });
    };
    FollowsToUserSubscription = __decorate([
        rtfm('twitch-webhooks', 'Subscription')
    ], FollowsToUserSubscription);
    return FollowsToUserSubscription;
}(Subscription));
export { FollowsToUserSubscription };
