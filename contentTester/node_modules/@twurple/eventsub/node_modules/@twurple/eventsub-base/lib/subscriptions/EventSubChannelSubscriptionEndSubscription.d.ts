import type { HelixEventSubSubscription } from '@twurple/api';
import { EventSubChannelSubscriptionEndEvent } from '../events/EventSubChannelSubscriptionEndEvent';
import { type EventSubChannelSubscriptionEndEventData } from '../events/EventSubChannelSubscriptionEndEvent.external';
import type { EventSubBase } from '../EventSubBase';
import { EventSubSubscription } from './EventSubSubscription';
/**
 * @private
 */
export declare class EventSubChannelSubscriptionEndSubscription extends EventSubSubscription<EventSubChannelSubscriptionEndEvent> {
    private readonly _userId;
    /** @protected */ readonly _cliName = "unsubscribe";
    constructor(handler: (data: EventSubChannelSubscriptionEndEvent) => void, client: EventSubBase, _userId: string);
    get id(): string;
    protected transformData(data: EventSubChannelSubscriptionEndEventData): EventSubChannelSubscriptionEndEvent;
    protected _subscribe(): Promise<HelixEventSubSubscription>;
}
//# sourceMappingURL=EventSubChannelSubscriptionEndSubscription.d.ts.map