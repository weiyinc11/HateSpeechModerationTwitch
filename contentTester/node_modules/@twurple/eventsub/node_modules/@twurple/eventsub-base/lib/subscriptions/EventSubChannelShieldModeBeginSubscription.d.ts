import type { HelixEventSubSubscription } from '@twurple/api';
import { EventSubChannelShieldModeBeginEvent } from '../events/EventSubChannelShieldModeBeginEvent';
import type { EventSubChannelShieldModeBeginEventData } from '../events/EventSubChannelShieldModeBeginEvent.external';
import type { EventSubBase } from '../EventSubBase';
import { EventSubSubscription } from './EventSubSubscription';
/**
 * @private
 */
export declare class EventSubChannelShieldModeBeginSubscription extends EventSubSubscription<EventSubChannelShieldModeBeginEvent> {
    private readonly _userId;
    private readonly _moderatorId;
    /** @protected */ readonly _cliName = "";
    constructor(handler: (data: EventSubChannelShieldModeBeginEvent) => void, client: EventSubBase, _userId: string, _moderatorId: string);
    get id(): string;
    protected transformData(data: EventSubChannelShieldModeBeginEventData): EventSubChannelShieldModeBeginEvent;
    protected _subscribe(): Promise<HelixEventSubSubscription>;
}
//# sourceMappingURL=EventSubChannelShieldModeBeginSubscription.d.ts.map