import type { HelixEventSubSubscription } from '@twurple/api';
import { EventSubStreamOfflineEvent } from '../events/EventSubStreamOfflineEvent';
import { type EventSubStreamOfflineEventData } from '../events/EventSubStreamOfflineEvent.external';
import type { EventSubBase } from '../EventSubBase';
import { EventSubSubscription } from './EventSubSubscription';
/**
 * @private
 */
export declare class EventSubStreamOfflineSubscription extends EventSubSubscription<EventSubStreamOfflineEvent> {
    private readonly _userId;
    /** @protected */ readonly _cliName = "streamdown";
    constructor(handler: (data: EventSubStreamOfflineEvent) => void, client: EventSubBase, _userId: string);
    get id(): string;
    protected transformData(data: EventSubStreamOfflineEventData): EventSubStreamOfflineEvent;
    protected _subscribe(): Promise<HelixEventSubSubscription>;
}
//# sourceMappingURL=EventSubStreamOfflineSubscription.d.ts.map